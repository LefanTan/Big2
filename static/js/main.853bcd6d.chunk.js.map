{"version":3,"sources":["components/GamePage.module.css","components/ErrorPage.module.css","App.module.css","components/Deck.module.css","components/LobbyPage.module.css","components/Deck.js","components/Player.js","services/Firebase.js","components/ErrorPage.js","components/GamePage.js","components/LobbyPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Deck","className","styles","Container","Player","props","useState","text","setText","gridRowNumber","gridColumnNumber","playerNo","toString","Error","playerContainer","backgroundColor","gridRowStart","gridColumnStart","width","height","display","flexDirection","justifyContent","alignItems","style","children","onSubmit","e","console","log","type","value","onChange","target","firebase","initializeApp","apiKey","authDomain","databaseURL","auth","db","database","ErrorPage","h1","GamePage","roomReadRef","ref","child","location","useLocation","history","useHistory","lobbyExist","setLobbyExist","loading","setLoading","lobbyStrIndex","search","indexOf","nameStrIndex","lobbyCode","substring","localPlayerName","playerList","setPlayerList","startingPlayerNo","useEffect","on","snap","exists","val","orderByKey","equalTo","once","loadingContainer","userCorner","exitButton","onClick","newPlayerList","filter","x","lobbyReadRef","set","players","length","remove","push","process","exitIcon","exitTooltip","p","map","playerName","assignedNumber","LobbyPage","setLobbyCode","setPlayerName","playerNameFilled","alert","randomAlphaNumericGenerator","randomNo","Math","floor","random","String","fromCharCode","pathname","toUpperCase","preventDefault","id","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.853bcd6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"GamePage_Container__N989G\",\"loadingContainer\":\"GamePage_loadingContainer__1Zro2\",\"userCorner\":\"GamePage_userCorner__2EhId\",\"exitButton\":\"GamePage_exitButton__gUP_W\",\"exitTooltip\":\"GamePage_exitTooltip__1j4t5\",\"exitIcon\":\"GamePage_exitIcon__xTmUJ\",\"p\":\"GamePage_p__1626i index_generalText__2dy3_\",\"h1\":\"GamePage_h1__1lcBd index_generalText__2dy3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ErrorPage_Container__1I_k7\",\"h1\":\"ErrorPage_h1__2UsE6 index_generalText__2dy3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__3iFbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Deck_Container__deUXb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LobbyPage_Container__3w_jx\"};","import styles from './Deck.module.css'\n\nexport default function Deck (){\n    return(\n        <div className={styles.Container}>\n            <p>Hey</p>\n            <p>DECK AREA1</p>\n            <p>DECK AREA2</p>\n            <p>DECK AREA3</p>\n            <p>DECK AREA4</p>\n            <p>DECK AREA5</p>\n            <p>DECK AREA6</p>\n            <p>DECK AREA7</p>\n            <p>DECK AREA8</p>\n            <p>DECK AREA9</p>\n            <p>DECK AREA10</p>\n            <p>DECK AREA11</p>\n            <p>DECK AREA12</p>\n            <p>DECK AREA13</p>\n            <p>DECK AREA14</p>\n            <p>DECK AREA15</p>\n            <p>DECK AREA16</p>\n        </div>\n    )\n}","import { useState } from \"react\";\n\n/* Prop: \nplayerNo = Determines where the player will be showned locally on screen, client should always be Player1\n*/\nexport default function Player(props){\n    const [text, setText] = useState('')\n\n    var gridRowNumber = 0;\n    var gridColumnNumber = 0;\n\n    // Update gridRowNumber and gridColumnNumber based on local player number\n    switch(props.playerNo.toString()){\n        case '1':\n            gridRowNumber = 3\n            gridColumnNumber = 3\n            break;\n        case '2':\n            gridRowNumber = 2\n            gridColumnNumber = 5\n            break;\n        case '3':\n            gridRowNumber = 1\n            gridColumnNumber = 3\n            break;\n        case '4':\n            gridRowNumber = 2\n            gridColumnNumber = 1\n            break;\n        default:\n            throw new Error(\"Invalid Player Number\")\n    }\n\n    var playerContainer = {\n        backgroundColor: 'beige',\n        gridRowStart: `${gridRowNumber}`,\n        gridColumnStart: `${gridColumnNumber}`,\n        width: '100%',\n        height: '100%',\n\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems:  'center'\n    }\n\n    const submitHandler = (e) => {\n        console.log(text)\n        setText('')\n    }\n\n    return(\n        <div style={playerContainer}>\n            <p>{props.children}</p>\n            {props.playerNo === 1 &&\n                <form onSubmit={submitHandler}>\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)}/>\n                </form>\n            }\n        </div>\n    );\n}","// <!-- The core Firebase JS SDK is always required and must be listed first -->\n// <script src=\"https://www.gstatic.com/firebasejs/8.6.8/firebase-app.js\"></script>\n\n// <!-- TODO: Add SDKs for Firebase products that you want to use\n//      https://firebase.google.com/docs/web/setup#available-libraries -->\n// <script src=\"https://www.gstatic.com/firebasejs/8.6.8/firebase-analytics.js\"></script>\n\n// <script>\n//   // Your web app's Firebase configuration\n//   // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n//   var firebaseConfig = {\n  //   apiKey: \"AIzaSyA__laCqzqZe3MmI3_TC_F1ywdMvo4vprg\",\n  //   authDomain: \"big2-4e418.firebaseapp.com\",\n  //   databaseURL: \"https://big2-4e418-default-rtdb.firebaseio.com\",\n  //   projectId: \"big2-4e418\",\n  //   storageBucket: \"big2-4e418.appspot.com\",\n  //   messagingSenderId: \"1014909594305\",\n  //   appId: \"1:1014909594305:web:b10ee15f534c95eb6f8240\",\n  //   measurementId: \"G-PMYKH1SK0L\"\n  // };\n//   // Initialize Firebase\n//   firebase.initializeApp(firebaseConfig);\n//   firebase.analytics();\n// </script>\n\nimport firebase from 'firebase';\n\nconst config = {\n  apiKey: \"AIzaSyA__laCqzqZe3MmI3_TC_F1ywdMvo4vprg\",\n  authDomain: \"big2-4e418.firebaseapp.com\",\n  databaseURL: \"https://big2-4e418-default-rtdb.firebaseio.com\"\n};\n\nfirebase.initializeApp(config); \n\nexport const auth = firebase.auth;\nexport const db = firebase.database();","import styles from './ErrorPage.module.css'\n\nexport default function ErrorPage(props){\n    return(\n        <div className={styles.Container}>\n            <h1 className={styles.h1}>{props.children}</h1>\n        </div>\n    )\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport Deck from './Deck.js';\nimport Player from './Player.js'\nimport styles from './GamePage.module.css'\nimport {db} from '../services/Firebase'\nimport { useLocation, useHistory } from 'react-router';\nimport { useEffect, useState } from 'react'\nimport { IoExitOutline } from 'react-icons/io5'\nimport ErrorPage from './ErrorPage.js';\n\nexport default function GamePage(){\n    const roomReadRef = db.ref().child(`Lobbies`)\n    const location = useLocation()\n    const history = useHistory()\n\n    const [lobbyExist, setLobbyExist] = useState(false);\n    const [loading, setLoading] = useState(true)\n\n    const lobbyStrIndex = location.search.indexOf('code=')\n    const nameStrIndex = location.search.indexOf('name=')\n\n    // Get the lobby code and local player name from the Url\n    const lobbyCode = location.search.substring(lobbyStrIndex + 5, nameStrIndex - 1)\n    const localPlayerName = location.search.substring(nameStrIndex + 5)\n\n    const [playerList, setPlayerList] = useState([])\n    var startingPlayerNo = 2\n\n    useEffect(() => {\n        if(lobbyExist){\n            const playerListQuery = roomReadRef.child(lobbyCode)\n            playerListQuery.on('value', snap => {\n                if(snap.exists()) setPlayerList(snap.val()['players'])\n            })  \n        }\n    }, [lobbyExist])\n\n    useEffect(() => {\n        const query = roomReadRef.orderByKey().equalTo(lobbyCode)\n        query.once('value', snap => {\n            setLobbyExist(snap.exists())\n            setLoading(false)\n        })\n    }, [lobbyCode])\n    \n    // Handles when local player exit the game lobby\n    // If last person to exit, delete the lobby\n    const exitHandler = () => {\n        const query = roomReadRef.orderByKey().equalTo(lobbyCode)\n        query.once('value', snap => {\n            let newPlayerList = (snap.val()[lobbyCode]['players']).filter(x => x !== localPlayerName)\n            \n            // set new list that doesn't contain the local player\n            const lobbyReadRef = roomReadRef.child(lobbyCode)\n            lobbyReadRef.set({\n                players: newPlayerList\n            })\n\n            if(newPlayerList.length === 0)\n                lobbyReadRef.remove()\n        })\n\n        history.push(process.env.REACT_APP_LOBBYPAGE_URL)\n    }\n\n    if(loading){\n        return (\n            <div className={styles.loadingContainer}>\n                <h1 className={styles.h1}>Loading...</h1>\n            </div>\n        )\n    }else{\n        return( \n            lobbyExist ?\n            <div className={styles.Container}>\n                <div className={styles.userCorner}>\n                    <button className={styles.exitButton} onClick={() => exitHandler()}>\n                        <IoExitOutline className={styles.exitIcon}/>\n                        <p className={styles.exitTooltip}>Exit</p>\n                    </button>\n                    <p className={styles.p}>CODE: {lobbyCode}</p>\n                </div>\n\n                {playerList.map((playerName) => {\n                    // Make sure local player gets 1 as assigned number, and everyone else starts from 2\n                    const assignedNumber = playerName === localPlayerName ? 1 : startingPlayerNo++\n                    return(<Player key={assignedNumber} playerNo={assignedNumber}>{playerName}</Player>)\n                })}\n                <Deck/>\n            </div> \n            : <ErrorPage>404 Lobby not found</ErrorPage>\n        )\n    }\n}","import { useState } from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {db} from '../services/Firebase'\nimport styles from './LobbyPage.module.css'\n\nexport default function LobbyPage(){\n    const history = useHistory()\n    var [lobbyCode, setLobbyCode] = useState('')\n    var [playerName, setPlayerName] = useState('')\n\n    const roomReadRef = db.ref().child(`Lobbies`)\n\n    /* Check if player name field is filled, if not, show an alert and return false */\n    const playerNameFilled = () => {\n        if(playerName.length === 0){\n            alert('Please enter a name')\n            return false\n        }\n        return true\n    }\n\n    const lobbyEnterHandler = () => {\n        if(!playerNameFilled() || lobbyCode === '')\n            return\n\n        const query = roomReadRef.orderByKey().equalTo(lobbyCode)\n        query.once('value', snap => {\n            if(snap.exists()){\n                let playerList = snap.val()[lobbyCode]['players']\n\n                if(playerList.length >= 4){\n                    return\n                }\n\n                playerList.push(playerName)\n\n                const lobbyReadRef = roomReadRef.child(`${lobbyCode}`)\n                lobbyReadRef.set({players: playerList})\n\n                history.push({\n                    pathname: process.env.REACT_APP_GAMEPAGE_URL,\n                    search: `?code=${lobbyCode}&name=${playerName}`\n                })\n            }\n            else\n                console.log(\"Lobby doesn't exist\")\n        })\n        setLobbyCode('')\n    }\n\n    /* Random Code Generator: Generate 4 letter combination, each letter is random from 0-9, A-Z.  */\n    const randomAlphaNumericGenerator = () => {\n        // Generate a number from 0 - 35 \n        // If number is 0 - 9, convert directly to char\n        // if number is 10-35, add 55 to get ASCII code of Alphabet letter\n        var randomNo = Math.floor(Math.random() * 36)\n        \n        if(randomNo < 10) return randomNo.toString()\n        else return String.fromCharCode(55 + randomNo)\n    }\n\n    const lobbyCreateHandler = (e) => {\n        e.preventDefault()\n\n        if(!playerNameFilled())\n            return\n        \n        // Generate 4 letter code\n        lobbyCode = randomAlphaNumericGenerator() + randomAlphaNumericGenerator() + randomAlphaNumericGenerator() + randomAlphaNumericGenerator()\n\n        // Check if the generated code already exist, if so, generate again\n        const query = roomReadRef.orderByKey().equalTo(lobbyCode)\n        query.once('value', snap => {\n            if(snap.exists()){\n                lobbyCode = randomAlphaNumericGenerator() + randomAlphaNumericGenerator() + randomAlphaNumericGenerator() + randomAlphaNumericGenerator()\n            }\n        })\n\n        const roomWriteRef = db.ref().child(`Lobbies/${lobbyCode}`)\n        roomWriteRef.set({\n            id: lobbyCode,\n            players: [playerName]\n        })\n        // Redirect to Game Page\n        history.push({\n            pathname: process.env.REACT_APP_GAMEPAGE_URL,\n            search: `?code=${lobbyCode}&name=${playerName}`\n        })\n    }\n\n    return(\n        <div className={styles.Container}>\n            <p>LOBBY CODE</p>\n            <form onSubmit={lobbyEnterHandler}>\n                <input value={lobbyCode} onChange={(e) => setLobbyCode(e.target.value.toUpperCase())} type=\"text\"/>\n                <button type=\"submit\">Enter</button>\n                <button onClick={lobbyCreateHandler}>Create Room</button>\n            </form>\n            <p>PLAYER NAME</p>\n            <input value={playerName} onChange={(e) => setPlayerName(e.target.value)} type=\"text\"/>\n        </div>\n    )\n}","import styles from './App.module.css';\nimport GamePage from './components/GamePage';\nimport LobbyPage from './components/LobbyPage'\nimport {Switch, Route, HashRouter} from 'react-router-dom'\nimport ErrorPage from './components/ErrorPage';\n\nfunction App() {\n  return (\n    <div className={styles.Container}>\n      <HashRouter>\n        <Switch>\n          <Route path='/' exact component={LobbyPage} />\n          <Route path={process.env.REACT_APP_LOBBYPAGE_URL} exact component={LobbyPage} />\n          <Route path={process.env.REACT_APP_GAMEPAGE_URL} exact component={GamePage}/>\n          <Route path=\"*\" component={() => <ErrorPage>404 Page not found</ErrorPage>}/>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}