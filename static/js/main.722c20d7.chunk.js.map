{"version":3,"sources":["components/GamePage.module.css","components/LobbyPage.module.css","components/Player.module.css","components/Deck.module.css","components/Popup.module.css","components/ErrorPage.module.css","App.module.css","assets/cards sync /^/.*$","assets/cards/02C.png","assets/cards/02D.png","assets/cards/02L.png","assets/cards/02S.png","assets/cards/03C.png","assets/cards/03D.png","assets/cards/03L.png","assets/cards/03S.png","assets/cards/04C.png","assets/cards/04D.png","assets/cards/04L.png","assets/cards/04S.png","assets/cards/05C.png","assets/cards/05D.png","assets/cards/05L.png","assets/cards/05S.png","assets/cards/06C.png","assets/cards/06D.png","assets/cards/06L.png","assets/cards/06S.png","assets/cards/07C.png","assets/cards/07D.png","assets/cards/07L.png","assets/cards/07S.png","assets/cards/08C.png","assets/cards/08D.png","assets/cards/08L.png","assets/cards/08S.png","assets/cards/09C.png","assets/cards/09D.png","assets/cards/09L.png","assets/cards/09S.png","assets/cards/0AC.png","assets/cards/0AD.png","assets/cards/0AL.png","assets/cards/0AS.png","assets/cards/0JC.png","assets/cards/0JD.png","assets/cards/0JL.png","assets/cards/0JS.png","assets/cards/0KC.png","assets/cards/0KD.png","assets/cards/0KL.png","assets/cards/0KS.png","assets/cards/0QC.png","assets/cards/0QD.png","assets/cards/0QL.png","assets/cards/0QS.png","assets/cards/10C.png","assets/cards/10D.png","assets/cards/10L.png","assets/cards/10S.png","assets/cards/back-right.png","assets/cards/back.png","services/Firebase.js","services/Helpers.js","components/Card.js","components/Deck.js","components/Player.js","components/ErrorPage.js","assets/circle.png","assets/user-info.png","assets/user-info2.png","assets/circle-filled.png","components/Popup.js","components/GamePage.js","assets/leftBackground.png","assets/rightBackground.png","components/LobbyPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","firebase","initializeApp","apiKey","authDomain","databaseURL","auth","db","database","getCardImage","cardType","cardImage","require","images","numOrder","suitOrder","sortCard","x","y","xNumIndex","indexOf","slice","toUpperCase","yNumIndex","xSuitIndex","ySuitIndex","combosType","Card","props","useState","hovered","setHovered","active","setActive","toggleHovered","toggleActive","cardButtonStyle","position","left","right","top","clicked","padding","border","backgroundColor","width","height","yShadowDistance","imgStyle","filter","margin","hoveredImgStyle","activeImgStyle","style","onClick","clickable","cardClickedHandler","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","src","alt","Deck","cardList","setCardList","deck","setDeck","useEffect","ref","child","lobbyCode","on","snap","exists","val","pulseAnimationVertical","keyframes","pulseAnimationHorizontal","ArrowDiv","arrowIconStyle","color","playerTurnNumber","marginBottom","arrowIcon","styled","div","console","log","className","styles","Container","DeckContainer","length","index","h3","p","Player","playerCards","setPlayerCards","selectedCards","setSelectedCards","gridRowNumber","gridColumnNumber","gridTemplateRows","gridTemplateColumns","playerData","cardObjectArray","values","obj","sort","playerNo","toString","playerContainer","gridRowStart","gridColumnStart","display","justifyContent","userNameContainer","flexDirection","alignItems","cardContainer","personImageStyle","transform","includes","userName","userNameLeft","userNameRight","children","utilityButton","onSubmit","utilityIcon","onSkip","ErrorPage","h1","Popup","trigger","popup","popupContent","onCloseButtonClicked","closeButton","closeIcon","GamePage","location","useLocation","history","useHistory","lobbyStrIndex","search","nameStrIndex","substring","localPlayerName","roomReadRef","playerTurnQuery","deckQuery","playerListQuery","lobbyExist","setLobbyExist","loading","setLoading","startGame","setStartGame","gameEnded","setGameEnded","prevWinner","setPrevWinner","infoTrigger","setInfoTrigger","userInfoPage","setUserInfoPage","submitError","setSubmitError","playerTurn","setPlayerTurn","playerObjDict","setPlayerObjDict","localPlayerKey","find","key","name","isHost","playerNameNumberDict","initialDeck","cardTypes","currentPlayerNo","orderByKey","equalTo","once","array","i","j","Math","floor","random","shuffleArray","playerIndex","playerKeys","remove","push","update","started","set","cards","deckType","largestCardInDeck","emoji","placedBy","forEach","playerKey","ready","setTimeout","onPlayerSubmitHandler","info","firstSuitIndex","secondSuitIndex","sortedCards","reverse","thirdSuitIndex","firstSuit","every","card","prevCardIndex","cardsWithoutSuits","uniqueCards","firstItemCount","secondItemCount","abs","getCardType","first","second","cardKey","nextNumber","onPlayerSkipHandler","loadingContainer","playerReadyContainer","submitInfoText","rowContainer","player","circleFilled","circle","readyCircle","playButton","playerQuery","words","userCorner","cornerButton","entries","k","process","cornerIcon","tooltip","userInfoContainer","userh1","userInfo","userInfo2","userInfoImg","pageButton","playerObj","assignedNumber","turn","submitInfoContainer","LobbyPage","setLobbyCode","playerName","setPlayerName","playClicked","setPlayClicked","errorMsg","setErrorMsg","playerNameCheck","test","randomAlphaNumericGenerator","randomNo","String","fromCharCode","inputContainer","preventDefault","host","then","pathname","inputField","value","onChange","target","type","button","roomWriteRef","leftBackgroundContainer","leftBackground","leftBackgroundClicked","rightBackgroundContainer","rightBackground","rightBackgroundClicked","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.722c20d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"GamePage_Container__N989G\",\"submitInfoContainer\":\"GamePage_submitInfoContainer__2sjfo\",\"userInfoContainer\":\"GamePage_userInfoContainer__2g4nF\",\"loadingContainer\":\"GamePage_loadingContainer__1Zro2\",\"userCorner\":\"GamePage_userCorner__2EhId\",\"cornerButton\":\"GamePage_cornerButton__spn0R\",\"tooltip\":\"GamePage_tooltip__3BE0h\",\"pageButton\":\"GamePage_pageButton__3SXhc GamePage_cornerButton__spn0R\",\"cornerIcon\":\"GamePage_cornerIcon__3f9Lx\",\"rowContainer\":\"GamePage_rowContainer__3zHTx\",\"readyCircle\":\"GamePage_readyCircle__1IsTO\",\"playerReadyContainer\":\"GamePage_playerReadyContainer__3d0ov\",\"words\":\"GamePage_words__1SO2V index_genericText__3sj49\",\"playButton\":\"GamePage_playButton__2Tx0u index_genericButton__33zSg\",\"p\":\"GamePage_p__1626i index_genericText__3sj49\",\"h1\":\"GamePage_h1__1lcBd index_genericText__3sj49\",\"userh1\":\"GamePage_userh1__2utBx index_genericText__3sj49\",\"submitInfoText\":\"GamePage_submitInfoText__1pIOS index_genericText__3sj49\",\"userInfoImg\":\"GamePage_userInfoImg__3oSTW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LobbyPage_Container__3w_jx\",\"inputContainer\":\"LobbyPage_inputContainer__29TIG\",\"leftBackgroundContainer\":\"LobbyPage_leftBackgroundContainer__2ZiVT\",\"leftBackground\":\"LobbyPage_leftBackground__1QgYV\",\"leftBackgroundClicked\":\"LobbyPage_leftBackgroundClicked__3ZbEx LobbyPage_leftBackground__1QgYV\",\"rightBackgroundContainer\":\"LobbyPage_rightBackgroundContainer__2hBH9\",\"rightBackground\":\"LobbyPage_rightBackground__37Yy-\",\"rightBackgroundClicked\":\"LobbyPage_rightBackgroundClicked__3IqH5 LobbyPage_rightBackground__37Yy-\",\"titleContainer\":\"LobbyPage_titleContainer__1ea2C\",\"rowContainer\":\"LobbyPage_rowContainer__23BHn\",\"playButton\":\"LobbyPage_playButton__3Jb8l index_genericButton__33zSg\",\"button\":\"LobbyPage_button__2Gudc index_genericButton__33zSg\",\"p\":\"LobbyPage_p__S3-xE index_genericText__3sj49\",\"errorMsg\":\"LobbyPage_errorMsg__2JP4F index_genericText__3sj49\",\"inputField\":\"LobbyPage_inputField__2rLH2 index_genericText__3sj49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userName\":\"Player_userName__2nVNU index_genericText__3sj49\",\"userNameRight\":\"Player_userNameRight__TLHEl Player_userName__2nVNU index_genericText__3sj49\",\"userNameLeft\":\"Player_userNameLeft__1ted6 Player_userNameRight__TLHEl Player_userName__2nVNU index_genericText__3sj49\",\"utilityButton\":\"Player_utilityButton__1g2BF index_genericButton__33zSg\",\"utilityIcon\":\"Player_utilityIcon__FTDSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Deck_Container__deUXb\",\"DeckContainer\":\"Deck_DeckContainer__oobRL\",\"h3\":\"Deck_h3__lTBe6 index_genericText__3sj49\",\"p\":\"Deck_p__1T5u2 index_genericText__3sj49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Popup_popup__hK54X\",\"popupContent\":\"Popup_popupContent__2GDBe\",\"closeIcon\":\"Popup_closeIcon__2EMqv\",\"closeButton\":\"Popup_closeButton__3tk-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ErrorPage_Container__1I_k7\",\"h1\":\"ErrorPage_h1__2UsE6 undefined\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__3iFbT\"};","var map = {\n\t\"./02C.png\": 67,\n\t\"./02D.png\": 68,\n\t\"./02L.png\": 69,\n\t\"./02S.png\": 70,\n\t\"./03C.png\": 71,\n\t\"./03D.png\": 72,\n\t\"./03L.png\": 73,\n\t\"./03S.png\": 74,\n\t\"./04C.png\": 75,\n\t\"./04D.png\": 76,\n\t\"./04L.png\": 77,\n\t\"./04S.png\": 78,\n\t\"./05C.png\": 79,\n\t\"./05D.png\": 80,\n\t\"./05L.png\": 81,\n\t\"./05S.png\": 82,\n\t\"./06C.png\": 83,\n\t\"./06D.png\": 84,\n\t\"./06L.png\": 85,\n\t\"./06S.png\": 86,\n\t\"./07C.png\": 87,\n\t\"./07D.png\": 88,\n\t\"./07L.png\": 89,\n\t\"./07S.png\": 90,\n\t\"./08C.png\": 91,\n\t\"./08D.png\": 92,\n\t\"./08L.png\": 93,\n\t\"./08S.png\": 94,\n\t\"./09C.png\": 95,\n\t\"./09D.png\": 96,\n\t\"./09L.png\": 97,\n\t\"./09S.png\": 98,\n\t\"./0AC.png\": 99,\n\t\"./0AD.png\": 100,\n\t\"./0AL.png\": 101,\n\t\"./0AS.png\": 102,\n\t\"./0JC.png\": 103,\n\t\"./0JD.png\": 104,\n\t\"./0JL.png\": 105,\n\t\"./0JS.png\": 106,\n\t\"./0KC.png\": 107,\n\t\"./0KD.png\": 108,\n\t\"./0KL.png\": 109,\n\t\"./0KS.png\": 110,\n\t\"./0QC.png\": 111,\n\t\"./0QD.png\": 112,\n\t\"./0QL.png\": 113,\n\t\"./0QS.png\": 114,\n\t\"./10C.png\": 115,\n\t\"./10D.png\": 116,\n\t\"./10L.png\": 117,\n\t\"./10S.png\": 118,\n\t\"./back-right.png\": 119,\n\t\"./back.png\": 120\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 66;","export default __webpack_public_path__ + \"static/media/02C.3515bc0c.png\";","export default __webpack_public_path__ + \"static/media/02D.c31616bd.png\";","export default __webpack_public_path__ + \"static/media/02L.032ffccf.png\";","export default __webpack_public_path__ + \"static/media/02S.6df3c0ce.png\";","export default __webpack_public_path__ + \"static/media/03C.e0842db2.png\";","export default __webpack_public_path__ + \"static/media/03D.27e7a0d3.png\";","export default __webpack_public_path__ + \"static/media/03L.df9b74c3.png\";","export default __webpack_public_path__ + \"static/media/03S.f4a7d08c.png\";","export default __webpack_public_path__ + \"static/media/04C.4f6ad9b0.png\";","export default __webpack_public_path__ + \"static/media/04D.1544baf2.png\";","export default __webpack_public_path__ + \"static/media/04L.382f37ae.png\";","export default __webpack_public_path__ + \"static/media/04S.a38bc55f.png\";","export default __webpack_public_path__ + \"static/media/05C.4795d05f.png\";","export default __webpack_public_path__ + \"static/media/05D.794ff8f3.png\";","export default __webpack_public_path__ + \"static/media/05L.8a1f0193.png\";","export default __webpack_public_path__ + \"static/media/05S.60a7f494.png\";","export default __webpack_public_path__ + \"static/media/06C.2753c53d.png\";","export default __webpack_public_path__ + \"static/media/06D.e2ef0786.png\";","export default __webpack_public_path__ + \"static/media/06L.d25c6e53.png\";","export default __webpack_public_path__ + \"static/media/06S.707de1b2.png\";","export default __webpack_public_path__ + \"static/media/07C.6d02b220.png\";","export default __webpack_public_path__ + \"static/media/07D.ef2a6b34.png\";","export default __webpack_public_path__ + \"static/media/07L.9578f078.png\";","export default __webpack_public_path__ + \"static/media/07S.74f1ffc0.png\";","export default __webpack_public_path__ + \"static/media/08C.cde717d5.png\";","export default __webpack_public_path__ + \"static/media/08D.50e7e199.png\";","export default __webpack_public_path__ + \"static/media/08L.f41f6ba6.png\";","export default __webpack_public_path__ + \"static/media/08S.10c98847.png\";","export default __webpack_public_path__ + \"static/media/09C.1144db05.png\";","export default __webpack_public_path__ + \"static/media/09D.0d5e90bc.png\";","export default __webpack_public_path__ + \"static/media/09L.4650c3ed.png\";","export default __webpack_public_path__ + \"static/media/09S.495a98a0.png\";","export default __webpack_public_path__ + \"static/media/0AC.9e6aef3b.png\";","export default __webpack_public_path__ + \"static/media/0AD.aeda88d5.png\";","export default __webpack_public_path__ + \"static/media/0AL.4d6a8529.png\";","export default __webpack_public_path__ + \"static/media/0AS.fcf78677.png\";","export default __webpack_public_path__ + \"static/media/0JC.bed555b7.png\";","export default __webpack_public_path__ + \"static/media/0JD.7d5b1425.png\";","export default __webpack_public_path__ + \"static/media/0JL.a8275793.png\";","export default __webpack_public_path__ + \"static/media/0JS.4bc09485.png\";","export default __webpack_public_path__ + \"static/media/0KC.3465224f.png\";","export default __webpack_public_path__ + \"static/media/0KD.6d1622eb.png\";","export default __webpack_public_path__ + \"static/media/0KL.a4d97c96.png\";","export default __webpack_public_path__ + \"static/media/0KS.77a2d5c7.png\";","export default __webpack_public_path__ + \"static/media/0QC.998956bc.png\";","export default __webpack_public_path__ + \"static/media/0QD.43fb00a0.png\";","export default __webpack_public_path__ + \"static/media/0QL.bf449feb.png\";","export default __webpack_public_path__ + \"static/media/0QS.b43a06b1.png\";","export default __webpack_public_path__ + \"static/media/10C.5b7db3ed.png\";","export default __webpack_public_path__ + \"static/media/10D.fb5e7ad7.png\";","export default __webpack_public_path__ + \"static/media/10L.de56149e.png\";","export default __webpack_public_path__ + \"static/media/10S.0f4121c8.png\";","export default __webpack_public_path__ + \"static/media/back-right.8305c80e.png\";","export default __webpack_public_path__ + \"static/media/back.d2784155.png\";","// <!-- The core Firebase JS SDK is always required and must be listed first -->\n// <script src=\"https://www.gstatic.com/firebasejs/8.6.8/firebase-app.js\"></script>\n\n// <!-- TODO: Add SDKs for Firebase products that you want to use\n//      https://firebase.google.com/docs/web/setup#available-libraries -->\n// <script src=\"https://www.gstatic.com/firebasejs/8.6.8/firebase-analytics.js\"></script>\n\n// <script>\n//   // Your web app's Firebase configuration\n//   // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n//   var firebaseConfig = {\n  //   apiKey: \"AIzaSyA__laCqzqZe3MmI3_TC_F1ywdMvo4vprg\",\n  //   authDomain: \"big2-4e418.firebaseapp.com\",\n  //   databaseURL: \"https://big2-4e418-default-rtdb.firebaseio.com\",\n  //   projectId: \"big2-4e418\",\n  //   storageBucket: \"big2-4e418.appspot.com\",\n  //   messagingSenderId: \"1014909594305\",\n  //   appId: \"1:1014909594305:web:b10ee15f534c95eb6f8240\",\n  //   measurementId: \"G-PMYKH1SK0L\"\n  // };\n//   // Initialize Firebase\n//   firebase.initializeApp(firebaseConfig);\n//   firebase.analytics();\n// </script>\n\nimport firebase from 'firebase';\n\nconst config = {\n  apiKey: \"AIzaSyA__laCqzqZe3MmI3_TC_F1ywdMvo4vprg\",\n  authDomain: \"big2-4e418.firebaseapp.com\",\n  databaseURL: \"https://big2-4e418-default-rtdb.firebaseio.com\"\n};\n\nfirebase.initializeApp(config); \n\nexport const auth = firebase.auth;\nexport const db = firebase.database();","export function getCardImage(cardType){\n    const images = require.context('../assets/cards/', true)\n\n    var cardImage = images(`./${cardType}.png`)\n\n    if(typeof(cardImage) === 'undefined'){\n        throw Error('Invalid Card Type')\n    }\n    return cardImage['default']\n}\n\nexport function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]]\n    }\n}\n\n// smallest to largest\nconst numOrder = ['03', '04', '05', '06', '07', '08', '09', '10', '0J', '0Q', '0K', '0A', '02']\nconst suitOrder = ['D', 'C', 'L', 'S']\n\n// Sort the cards from smallest to biggest\nexport function sortCard(x, y){\n    var xNumIndex = numOrder.indexOf(x.slice(0, 2).toUpperCase())\n    var yNumIndex = numOrder.indexOf(y.slice(0, 2).toUpperCase())\n    var xSuitIndex = suitOrder.indexOf(x.slice(2).toUpperCase())\n    var ySuitIndex = suitOrder.indexOf(y.slice(2).toUpperCase())\n\n    if(xNumIndex > yNumIndex)\n        return 1\n    else if (xNumIndex < yNumIndex)\n        return -1\n    else{ // both num index is the same, check for suit\n        if(xSuitIndex > ySuitIndex)\n            return 1\n        else if(xSuitIndex < ySuitIndex)\n            return -1\n        return 0\n    }\n}\n\n// smallest to biggest \nconst combosType = ['straight', 'flush', 'full house', 'four of a kind', 'straight flush', 'royal flush']\n// Takes two combo type and return true if first set is bigger than second set\n// Exception: for types single, double and triple, they'll only return true if both param are of same type etc (first: double, second: double) \n// Doesn't apply to triples, doubles or singles \nexport function biggerOrEqualCombo(first, second){\n    if(first === second) return true\n    else if((combosType.indexOf(first) !== -1 && combosType.indexOf(second) !== -1) && combosType.indexOf(first) >= combosType.indexOf(second)) return true\n    return false\n}\n\n// cards param must be an array\n// Return an array (combo type, biggestCardInDeck, emoji)\nexport function getCardType(cards){\n    // Biggest to smallest\n    var sortedCards = [...cards].sort(sortCard).reverse()\n\n    var firstSuitIndex, secondSuitIndex, thirdSuitIndex = ''\n\n    if(cards.length === 1){\n        return ['single', cards[0], '']\n    }else if(cards.length === 2 && cards[0].substring(0, 2) === cards[1].substring(0, 2)){ // make sure first card and second card has the same number type\n        firstSuitIndex = suitOrder.indexOf(cards[0].substring(2))\n        secondSuitIndex = suitOrder.indexOf(cards[1].substring(2))\n\n        return ['double',  firstSuitIndex > secondSuitIndex ? cards[0] : cards[1], '¯\\\\_(° ͜ʖ °)_/¯']\n    }else if(cards.length === 3 && (cards[0].substring(0, 2) === cards[1].substring(0, 2) && cards[0].substring(0, 2) === cards[2].substring(0, 2))){ // make sure first card, second and third card has the same number type\n        firstSuitIndex = suitOrder.indexOf(cards[0].substring(2))\n        secondSuitIndex = suitOrder.indexOf(cards[1].substring(2))\n        thirdSuitIndex = suitOrder.indexOf(cards[2].substring(2))\n\n        return ['triple',  firstSuitIndex > secondSuitIndex ? (thirdSuitIndex > firstSuitIndex ? cards[2] : cards[0]) : cards[1], '╭( ๐_๐)╮']\n    }else if(cards.length === 5){ // 5 cards combo\n\n        // Check for straights and straight flushes\n        let firstSuit = sortedCards[0].slice(2)\n\n        // FLUSHES, ROYAL AND STRAIGHT FLUSHES\n        if(sortedCards.every((card) => { // True if all suit is same\n            return card.slice(2) === firstSuit\n        })){\n            // If all cards are bigger than the next one by one, it is a straight flush\n            let prevCardIndex = 0\n            if(sortedCards.every((card) => {\n                var index = numOrder.indexOf(card.slice(0, 2))\n                if(prevCardIndex - index === 1 || prevCardIndex === 0){\n                    prevCardIndex = index\n                    return true\n                }\n                return false\n            })){\n                if(sortedCards[0].slice(0, 2) === '0A') // If biggest card starts with A, it is a royal flush\n                    return ['royal flush', sortedCards[0], '✧･ﾟ:*( ͡ꈍ ͜ʖ̫ ͡ꈍ )*:･ﾟ✧']\n\n                return ['straight flush', sortedCards[0], '( ͡° ͜ʖ ͡°)_╭∩╮']\n            }\n\n            return ['flush', sortedCards[0], '~( ˘▾˘~)']\n        }\n\n        // STRAIGHTS\n        // If all cards are bigger than the next one by one, it is a straight\n        let prevCardIndex = ''\n        if(sortedCards.every((card) => {\n            var index = numOrder.indexOf(card.slice(0, 2))\n            if(prevCardIndex - index === 1 || prevCardIndex === ''){\n                prevCardIndex = index\n                return true\n            }\n            return false\n        })){\n            return ['straight', sortedCards[0], '(≖ ͜ʖ≖)']\n        }\n\n        //FOUR OF A KIND & FULL HOUSE\n        let cardsWithoutSuits = []\n        sortedCards.forEach(card => cardsWithoutSuits.push(card.slice(0, 2)))\n        let uniqueCards = cardsWithoutSuits.filter((x, index) => cardsWithoutSuits.indexOf(x) === index)\n        // there should only be two unique items in a Full house or four of a kind\n        let firstItemCount = 0\n        let secondItemCount = 0\n\n        // Count how many times the two cards appear\n        cardsWithoutSuits.forEach(cards => {\n            if(cards === uniqueCards[0]) firstItemCount++\n            else if(cards === uniqueCards[1]) secondItemCount++\n        })\n\n        // FOUR OF A KIND\n        if(Math.abs(firstItemCount - secondItemCount) === 3){ \n            let biggestCard = ''\n            if (firstItemCount > secondItemCount) biggestCard = sortedCards[0] \n            else biggestCard = sortedCards[1]\n\n            return ['four of a kind', biggestCard, '(ʃƪ˶˘ ﻬ ˘˶)']\n        }\n\n        // FULL HOUSE\n        if(Math.abs(firstItemCount - secondItemCount) === 1){ // Full house\n            let biggestCard = ''\n            if (firstItemCount > secondItemCount) biggestCard = sortedCards[0] \n            else biggestCard = sortedCards[2]\n\n            return ['full house', biggestCard, '(~‾⌣‾)~']\n        }\n    }\n\n    return ['invalid', -1, '']\n}","import { getCardImage } from '../services/Helpers';\r\nimport { useState } from 'react';\r\n\r\n/* PROPS:\r\ncardType\r\ncardClickedHandler\r\n*/\r\nexport default function Card(props){\r\n    const [hovered, setHovered] = useState(false)\r\n    const [active, setActive] = useState(false)\r\n    const toggleHovered = () => setHovered(!hovered)\r\n    const toggleActive = () => setActive(!active)\r\n\r\n    var cardButtonStyle = {\r\n        position: 'absolute',\r\n        left: `${props.left}%`,\r\n        right: `${props.right}%`,\r\n        top: `${props.clicked ? -10 : props.top}%`,\r\n        padding: '0%',\r\n        border: '0',\r\n        backgroundColor: 'transparent',\r\n        width: `${props.width}%`,\r\n        height: `${props.height}%`\r\n    }\r\n\r\n    const yShadowDistance = props.height === 'auto' ? 2 : 1\r\n    var imgStyle = {\r\n        width: '100%',\r\n        height: `${props.height === 'auto' ? 'auto' : '100%'}`,\r\n        filter: `drop-shadow(-1px ${yShadowDistance}px 1px #6a6161)`,\r\n        margin: '0%',\r\n        padding: '0%'\r\n    }\r\n\r\n    var hoveredImgStyle = {\r\n        ...imgStyle,\r\n        filter: `brightness(0.925) drop-shadow(-1px ${yShadowDistance}px 1px #6a6161)`\r\n    }\r\n\r\n    var activeImgStyle = {\r\n        ...imgStyle,\r\n        filter: `brightness(0.85) drop-shadow(-1px ${yShadowDistance}px 1px #6a6161)`\r\n    }\r\n\r\n    return(\r\n        <button style={cardButtonStyle} onClick={() => props.clickable && props.cardClickedHandler(props.cardType)}>\r\n            <img style={hovered && props.clickable ? (active ? activeImgStyle : hoveredImgStyle) : imgStyle} \r\n            onMouseDown={toggleActive} onMouseUp={toggleActive} onMouseEnter={toggleHovered} onMouseLeave={toggleHovered} src={getCardImage(props.cardType)} alt='card'/>\r\n        </button>\r\n    )\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport styles from './Deck.module.css'\nimport styled, { keyframes } from 'styled-components'\nimport { db } from '../services/Firebase'\nimport Card from './Card.js'\nimport {BiDownArrow, BiUpArrow, BiLeftArrow, BiRightArrow} from 'react-icons/bi'\nimport { useEffect, useState } from 'react'\n\nexport default function Deck (props){\n    const [cardList, setCardList] = useState([])\n    const [deck, setDeck] = useState()\n\n    // Connect deck to firebase\n    useEffect(() => {\n        const deckRef = db.ref().child('Lobbies').child(props.lobbyCode).child('deck')\n        deckRef.on('value', snap => {\n            if(snap.exists()){\n                if(snap.val()['cards'] !== '') setCardList(snap.val()['cards'])\n                setDeck(snap.val())\n            } \n        })\n    },[])\n\n    // STYLES\n    const pulseAnimationVertical = keyframes`\n        0% {transform: translate(0)}\n        50% {transform: translate(0, 5px)}\n        100% {transform: translate(0)}\n    `\n    const pulseAnimationHorizontal = keyframes`\n        0% {transform: translate(0)}\n        50% {transform: translate(5px, 0)}\n        100% {transform: translate(0)}\n    `\n\n    var ArrowDiv = {}\n    var arrowIconStyle = {\n        color: 'var(--secondary-color)',\n        width: `${props.playerTurnNumber < 3 ? 'auto' : '32.5%'}`,\n        height: `${props.playerTurnNumber < 3 ? '70%' : 'auto'}`,\n        marginBottom: `${props.playerTurnNumber === 1 ? 3 : 0}%`\n    }\n    \n    // default icon\n    var arrowIcon = <BiDownArrow style={arrowIconStyle}/>\n    switch(props.playerTurnNumber){\n        case 1:\n            ArrowDiv = styled.div`\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                pointer-events: none;\n\n                width: 100%;\n                height: auto;\n                grid-row-start: 3;\n                grid-column: 2;\n                animation: ${pulseAnimationVertical} 1.5s ease-in-out;\n                animation-iteration-count: infinite;\n            `\n            arrowIcon = <BiDownArrow style={arrowIconStyle}/>\n            break\n        case 2:\n            ArrowDiv = styled.div`\n                display: flex;\n                justify-content: center;\n                align-items: center;\n\n                width: 100%;\n                height: auto;\n                grid-row-start: 1;\n                grid-column: 2;\n                animation: ${pulseAnimationVertical} 1.5s ease-in-out;\n                animation-iteration-count: infinite;\n            `\n            arrowIcon = <BiUpArrow style={arrowIconStyle}/>\n            break\n        case 3:\n            ArrowDiv = styled.div`\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                \n                width: 100%;\n                height: auto;\n                grid-row: 2;\n                grid-column-start: 3;\n                animation: ${pulseAnimationHorizontal} 1.5s ease-in-out;\n                animation-iteration-count: infinite;\n            `\n            arrowIcon = <BiRightArrow style={arrowIconStyle}/>\n            break\n        case 4:\n            ArrowDiv = styled.div`\n                display: flex;\n                justify-content: center;\n                align-items: center;\n\n                width: 100%;\n                height: auto;\n                grid-row: 2;\n                grid-column-start: 1;\n                animation: ${pulseAnimationHorizontal} 1.5s ease-in-out;\n                animation-iteration-count: infinite;\n            `\n            arrowIcon = <BiLeftArrow style={arrowIconStyle}/>\n            break\n        default:\n            console.log('undefined deck player turn')\n    }\n\n    return(\n        <div className={styles.Container}>\n            {props.playerTurnNumber && <ArrowDiv>{arrowIcon}</ArrowDiv>}\n            <div className={styles.DeckContainer}>\n                {cardList.length > 0 && cardList.map((cardType, index) => <Card key={cardType} width='15' left={(100 - cardList.length * 15) / 2 + index * 15} cardType={cardType}/>)}\n                {(deck && deck['deckType'] !== '') && <h3 className={styles.h3}>{deck['deckType'].toUpperCase()} {deck['emoji']}</h3>}\n                {(deck && deck['placedBy'] !== '') && <p className={styles.p}>Placed By: {deck['placedBy']}</p>}\n            </div>\n        </div>\n    )\n}","import {useEffect, useState } from \"react\";\nimport styles from './Player.module.css';\nimport { BsFillPersonFill } from 'react-icons/bs'\nimport { FaArrowUp, FaArrowsAltH, FaArrowDown } from 'react-icons/fa';\nimport {TiCancel} from 'react-icons/ti';\nimport Card from './Card.js';\nimport { sortCard } from \"../services/Helpers\";\n\n/* Prop: \nplayerNo = Determines where the player will be showned locally on screen, client should always be Player1\n*/\nexport default function Player(props){\n    const [playerCards, setPlayerCards] = useState([])\n    const [selectedCards, setSelectedCards] = useState([])\n\n    var gridRowNumber = 0\n    var gridColumnNumber = 0\n    var gridTemplateRows = 0\n    var gridTemplateColumns = 0\n\n    useEffect(() => {\n        if('cards' in props.playerData){\n            var cardObjectArray = Object.values(props.playerData['cards'])\n            setPlayerCards((cardObjectArray.map(obj => obj['cardType']).sort(sortCard)))\n        }else\n            setPlayerCards([])\n    }, [props.playerData])\n\n    // Update gridRowNumber and gridColumnNumber based on local player number\n    switch(props.playerNo.toString()){\n        case '1':\n            gridRowNumber = 3\n            gridColumnNumber = 3\n            gridTemplateRows = '75% 25%' \n            gridTemplateColumns = `100%` \n            break;\n        case '2':\n            gridRowNumber = 1\n            gridColumnNumber = 3\n            gridTemplateRows = '20% 80%' \n            gridTemplateColumns = `100%` \n            break;\n        case '3':\n            gridRowNumber = 2\n            gridColumnNumber = 5\n            gridTemplateRows = '100%'\n            gridTemplateColumns = `80% 20%`\n            break;\n        case '4':\n            gridRowNumber = 2\n            gridColumnNumber = 1\n            gridTemplateRows = '100%'\n            gridTemplateColumns = `20% 80%`\n            break;\n        default:\n            throw new Error(\"Invalid Player Number\")\n    }\n    \n    /** STLYES **/\n    var playerContainer = {\n        gridRowStart: `${gridRowNumber}`,\n        gridColumnStart: `${gridColumnNumber}`,\n        width: '100%',\n        height: '100%',\n\n        display: 'grid',\n        gridTemplateRows: `${gridTemplateRows}`,\n        gridTemplateColumns: `${gridTemplateColumns}`,\n        justifyContent: 'center'\n    }\n\n    var userNameContainer = {\n        gridRowStart: `${props.playerNo === 1 ? 2 : 1}`,\n        gridColumnStart: `${props.playerNo === 3 ? 2 : 1}`,\n        display: 'flex',\n        flexDirection: `${props.playerNo < 3 ? 'row' : 'column-reverse'}`,\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n\n    var cardContainer = {\n        gridRowStart: `${props.playerNo === 2 ? 2 : 1}`,\n        gridColumnStart: `${props.playerNo === 4 ? 2 : 1}`,\n        position: 'relative',\n    }\n\n    var personImageStyle = {\n        color: 'var(--secondary-color)',\n        height: 'fit-content',\n        transform: `${props.playerNo < 3 ? '' : `rotate(${props.playerNo === 3 ? -90 : 90}deg)`}`\n    }\n\n    /* CALLBACKS */\n\n    const cardClickedHandler = (cardType) => {\n        // Remove card if selected already\n        if(selectedCards.includes(cardType))\n            setSelectedCards(selectedCards.filter(x => x !== cardType))\n        else\n            setSelectedCards([...selectedCards, cardType])\n    }\n\n    return(\n        <div style={playerContainer}>\n            <div style={userNameContainer}>  \n                    <BsFillPersonFill style={personImageStyle}/>\n                    <p className={props.playerNo < 3 ? styles.userName : (props.playerNo === 4 ? styles.userNameLeft : styles.userNameRight)}>{props.children}</p>\n                    {props.playerNo === 1 && \n                    <button className={styles.utilityButton} onClick={() => \n                    {\n                        props.onSubmit(selectedCards) \n                        setSelectedCards([])\n                    }}>\n                        <FaArrowUp className={styles.utilityIcon}/>\n                    </button>}\n                    {props.playerNo === 1 && \n                    <button className={styles.utilityButton} onClick={() => props.onSkip()}>\n                        <TiCancel className={styles.utilityIcon}/>\n                    </button>}\n                    {props.playerNo === 1 && \n                    <button className={styles.utilityButton} onClick={() => setSelectedCards([])}>\n                        <FaArrowDown className={styles.utilityIcon}/>\n                    </button>}\n            </div>\n            <div style={cardContainer}>\n                {playerCards.map((cardType, index) => {\n                    cardType = props.playerNo < 3 ? (props.playerNo === 1 ? cardType : 'back') : 'back-right'\n                    var left = 0\n                    var top = 0\n                    var width = 'auto'\n                    var height = 'auto'\n\n                    if(props.playerNo === 1){\n                        left = 90 / (playerCards.length - 1) * index\n                        width = 10\n                        if(playerCards.length < 10)\n                            left = ((10 - playerCards.length) * 10) / 2 + index * 10\n                    }else if(props.playerNo === 2){\n                        width = 10\n                        height = width * 7.5\n                        top = height * 0.333\n\n                        left = 90 / (playerCards.length - 1) * index\n                        if(playerCards.length < 10)\n                            left = ((10 - playerCards.length) * 10) / 2 + index * 10\n\n                    }else if(props.playerNo === 3){\n                        height = 14.25\n                        width = height * 2.25\n\n                        // on the 14th card, put it to second row \n                        if(index >= 13){\n                            left = width\n                            // 12 because 13 is the max length - 1\n                            top = (85.5 / 12) * (index % 13)\n                        }else{\n                            if(playerCards.length - 1 > 13)\n                                top = (85.5 / 12) * index\n                            else\n                                top = (85.5 / (playerCards.length - 1)) * index    \n                        }   \n\n                        if(playerCards.length < 13 && index > 13)\n                            top = ((height * 7) - (playerCards.length * height)) / 2 + index * height\n                    }else if(props.playerNo === 4){\n                        height = 14.25\n                        width = height * 2.25\n                        left = 67.5\n\n                        // on the 14th card, put it to second row \n                        if(index >= 13){\n                            left = left - width\n                            // 12 because 13 is the max length - 1\n                            top = (85.5 / 12) * (index % 13)\n                        }else{\n                            if(playerCards.length - 1 > 13)\n                                top = (85.5 / 12) * index\n                            else\n                                top = (85.5 / (playerCards.length - 1)) * index\n                        }   \n\n                        if(playerCards.length < 13 && index >= 13)\n                            top = ((height * 7) - (playerCards.length * height)) / 2 + index * height\n                    }\n                    return <Card key={index} clickable={props.playerNo === 1} clicked={selectedCards.includes(cardType)} \n                    left={left} top={top} width={width} height={height} cardClickedHandler={cardClickedHandler} cardType={cardType}/>    \n                })}\n            </div>\n        </div>\n    );\n}","import styles from './ErrorPage.module.css'\n\nexport default function ErrorPage(props){\n    return(\n        <div className={styles.Container}>\n            <h1 className={styles.h1}>{props.children}</h1>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/circle.53f8fa04.png\";","export default __webpack_public_path__ + \"static/media/user-info.831d109c.png\";","export default __webpack_public_path__ + \"static/media/user-info2.4a5344b7.png\";","export default __webpack_public_path__ + \"static/media/circle-filled.140c7c5b.png\";","import styles from './Popup.module.css'\nimport {IoCloseCircleOutline} from 'react-icons/io5'\n\nexport default function Popup(props){\n    return( \n        props.trigger &&\n        <div className={styles.popup}>\n            <div className={styles.popupContent}>\n                {props.children}\n                <button onClick={props.onCloseButtonClicked} className={styles.closeButton}><IoCloseCircleOutline className={styles.closeIcon}/></button>\n            </div>\n        </div> \n    )\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport Deck from './Deck.js';\nimport Player from './Player.js'\nimport styles from './GamePage.module.css'\nimport {db} from '../services/Firebase'\nimport { useLocation, useHistory } from 'react-router';\nimport { useEffect, useState } from 'react'\nimport { IoExitOutline } from 'react-icons/io5'\nimport { IoIosInformationCircle } from 'react-icons/io'\nimport { BiRightArrowAlt, BiLeftArrowAlt } from 'react-icons/bi';\nimport ErrorPage from './ErrorPage.js';\nimport cardTypes from '../data structure/deck.json';\nimport circle from '../assets/circle.png';\nimport userInfo from '../assets/user-info.png';\nimport userInfo2 from '../assets/user-info2.png';\nimport circleFilled from '../assets/circle-filled.png';\nimport { shuffleArray, getCardType, sortCard, biggerOrEqualCombo } from '../services/Helpers.js';\nimport Popup from './Popup.js';\n\nexport default function GamePage(){\n    const location = useLocation()\n    const history = useHistory()\n\n    const lobbyStrIndex = location.search.indexOf('code=')\n    const nameStrIndex = location.search.indexOf('name=')\n    // Get the lobby code and local player name from the Url\n    const lobbyCode = location.search.substring(lobbyStrIndex + 5, nameStrIndex - 1)\n    const localPlayerName = location.search.substring(nameStrIndex + 5)\n\n    const roomReadRef = db.ref().child(`Lobbies`)\n    const playerTurnQuery = roomReadRef.child(lobbyCode).child('playerTurn')\n    const deckQuery = roomReadRef.child(lobbyCode).child('deck')\n    const playerListQuery = roomReadRef.child(lobbyCode).child('players')\n\n    // Indicate if this lobby exist, used during loadup\n    const [lobbyExist, setLobbyExist] = useState(false)\n    // Indicate if the page data is still being loaded\n    const [loading, setLoading] = useState(true)\n    // Indicate if the game has started already\n    const [startGame, setStartGame] = useState(false)\n    // Indicate if someone wins the game\n    const [gameEnded, setGameEnded] = useState(false)\n    // Indicate the previous winner\n    const [prevWinner, setPrevWinner] = useState(false)\n    // Indicate if the user info popup menu should appear\n    const [infoTrigger, setInfoTrigger] = useState(true)\n    // Indicate the page of the user info popup\n    const [userInfoPage, setUserInfoPage] = useState(1)\n\n    // Text displayed when submition of cards is not successful\n    const [submitError, setSubmitError] = useState('')\n    // Indicate which player's turn is it\n    const [playerTurn, setPlayerTurn] = useState('')\n    // A dictionary that contains information of all player\n    const [playerObjDict, setPlayerObjDict] = useState([])\n    \n    var localPlayerKey = Object.keys(playerObjDict).find(key => playerObjDict[key].name === localPlayerName)\n    var isHost = Object.values(playerObjDict).find(x => x['host'] === true && x['name'] === localPlayerName)\n    var playerNameNumberDict = {}\n    var initialDeck = cardTypes;\n    // Used when assigning player No to players \n    var currentPlayerNo = 2\n\n    // update player obj dict and playerTurn variable of the database\n    useEffect(() => {\n        if(lobbyExist){\n            playerListQuery.on('value', snap => {\n                if(snap.exists()) setPlayerObjDict(snap.val())\n            })  \n            \n            playerTurnQuery.on('value', snap => {\n                if(snap.exists()) setPlayerTurn(snap.val())\n            })\n\n            roomReadRef.child(`${lobbyCode}`).on('value', snap => {\n                if(snap.exists()){\n                    setStartGame(snap.val()['started'])\n                    setGameEnded(snap.val()['gameEnded'])\n                    setPrevWinner(snap.val()['prevWinner'])\n                }\n            })\n        }\n    }, [lobbyExist])\n\n    // Before entering game\n    useEffect(() => {\n        const query = roomReadRef.orderByKey().equalTo(lobbyCode)\n        query.once('value', snap => {\n            setLobbyExist(snap.exists())\n            setLoading(false)\n        })\n    }, [lobbyCode])\n\n    // // Set up window unload/closed events\n    // useEffect(() => {\n    //     window.addEventListener('beforeunload', alertUser)\n    //     window.addEventListener('unload', exitClickedHandler)\n    //     return () => {\n    //         window.removeEventListener('beforeunload', alertUser)\n    //         window.removeEventListener('unload', exitClickedHandler)\n    //     }\n    // }) \n\n    // Card dealing\n    useEffect(() => {\n        // Deal cards only if everyone is ready, and the person is a host\n        if(startGame && isHost){\n            shuffleArray(initialDeck)\n            let playerIndex = 0\n            let playerKeys = Object.keys(playerObjDict)\n\n            // Remove all cards from players if they exist\n            for(let i = 0; i < playerKeys.length; i++){\n                roomReadRef.child(`${lobbyCode}/players/${playerKeys[i]}/cards`).remove()\n            }\n            // Loop through the cards and deal them to player with a slight delay\n            for(let i = 0; i < initialDeck.length; i++){\n                const playerDeckQuery = roomReadRef.child(`${lobbyCode}/players/${playerKeys[playerIndex++ % playerKeys.length]}/cards`)\n                // const playerDeckQuery = roomReadRef.child(`${lobbyCode}/players/${playerKeys[0]}/cards`)\n                playerDeckQuery.push({cardType: initialDeck[i]})\n\n                if(initialDeck[i] === '03D') roomReadRef.child(lobbyCode).update({playerTurn: playerObjDict[playerKeys[(playerIndex - 1) % playerKeys.length]]['name']})\n            }\n        }\n    }, [startGame])\n\n    useEffect(() => {\n        localPlayerKey = Object.keys(playerObjDict).find(key => playerObjDict[key].name === localPlayerName)\n\n        // Make sure the ready words and buttons doesn't dissapear too suddently\n        if(!startGame){\n            setTimeout(() => {\n                // Only allow game to start if all player click ready, if only 1 player, clicking ready won't start\n                if(Object.keys(playerObjDict).length > 1 && typeof(Object.values(playerObjDict).find(obj => obj.ready === false)) === 'undefined') {\n                    roomReadRef.child(`${lobbyCode}`).update({started: true})\n                }\n            }, 1000);\n        }else{\n            if(gameEnded){\n                roomReadRef.child(`${lobbyCode}`).update({\n                    started: false,\n                    gameEnded: false\n                })\n\n                roomReadRef.child(`${lobbyCode}`).child('deck').set({\n                    cards: '',\n                    deckType: '',\n                    largestCardInDeck: '',\n                    emoji: '',\n                    placedBy: ''\n                })\n\n                Object.keys(playerObjDict).forEach((playerKey) => {\n                    playerListQuery.child(`${playerKey}`).update({\n                        cards: '',\n                        ready: false\n                    })\n                })\n            }\n        }\n\n    }, [playerObjDict])\n\n\n    const alertUser = e => {\n        e.preventDefault()\n        e.returnValue = ''  \n    }\n\n    const playerReadyHandler = () => {\n        const playerQuery = roomReadRef.child(lobbyCode).child(`/players/${localPlayerKey}`)\n\n        playerQuery.once('value', snap => {\n            playerQuery.set({\n                ...snap.val(),\n                ready: true\n            })  \n        })\n    }\n\n    // When player clicked submit\n    // Change player turn on the server, only change by the host\n    // PARAM: cards: array \n    //        type: string\n    const onPlayerSubmitHandler = (cards) => {\n        if(cards.length === 0) \n            return\n\n        if(playerTurn === localPlayerName){\n            var deckType = ''\n            var largestCardInDeck = ''\n\n            deckQuery.once('value', snap => {\n                if(snap.exists()){\n                    deckType = snap.val()['deckType']\n                    largestCardInDeck = snap.val()['largestCardInDeck']\n\n                    var info = getCardType(cards)\n                    // Update deck\n                    // Check if cards submitted is valid (bigger than the cards played in the deck, valid combo)\n                    if(info[1] === -1){\n                        setSubmitError('Invalid Cards')\n                        return\n                    }else if(deckType === '' || biggerOrEqualCombo(info[0], deckType)){\n                        if(info[0] === deckType){ // If same combo, check for largest card in deck\n                            if(sortCard(info[1], largestCardInDeck) > 0)\n                                deckQuery.set({\n                                    cards: cards,\n                                    deckType: info[0],\n                                    largestCardInDeck: info[1],\n                                    emoji: info[2],\n                                    placedBy: localPlayerName\n                                })\n                            else{ // same combo, smaller value\n                                setSubmitError('Invalid Cards')\n                                return\n                            } \n                        }else // cards is bigger than deck's cards\n                            deckQuery.set({\n                                cards: cards,\n                                deckType: info[0],\n                                largestCardInDeck: info[1],\n                                emoji: info[2],\n                                placedBy: localPlayerName\n                            })\n                    }else{ // Cards submitted is imcompatible with deck\n                        setSubmitError('Invalid Cards')\n                        return\n                    }\n\n                    // Remove cards from player's deck\n                    cards.forEach(card => {\n                        let cardKey = Object.keys(playerObjDict[localPlayerKey]['cards']).find(key => playerObjDict[localPlayerKey]['cards'][key].cardType === card)\n                        playerListQuery.child(`${localPlayerKey}/cards/${cardKey}`).remove()\n                    })\n\n                    if(Object.keys(playerObjDict[localPlayerKey]['cards']).length - cards.length === 0){\n                        roomReadRef.child(`${lobbyCode}`).update({\n                            gameEnded: true,\n                            prevWinner: localPlayerName\n                        })\n                    }\n\n                    // Update player Turn\n                    const keys = Object.keys(playerNameNumberDict)\n                    const nextNumber = (keys.indexOf(playerTurn) + 1) % keys.length\n                    roomReadRef.child(lobbyCode).update({playerTurn: keys[nextNumber]})\n\n                    setSubmitError('')\n                }\n            })\n        }else{\n            setSubmitError(\"It's not your turn yet, I beg you to patiently wait\")\n        }\n    }\n\n    const onPlayerSkipHandler = () => {\n        if(playerTurn === localPlayerName){\n            // Update player Turn\n            const keys = Object.keys(playerNameNumberDict)\n            const nextNumber = (keys.indexOf(playerTurn) + 1) % keys.length\n            roomReadRef.child(lobbyCode).update({playerTurn: keys[nextNumber]})\n\n            // If the next player is the person that last placed the card, refresh the deck info\n            const deckQuery = roomReadRef.child(`${lobbyCode}/deck`)\n            deckQuery.once('value', snap => {\n                if(snap.val()['placedBy'] === keys[nextNumber]){\n                    deckQuery.update({\n                        deckType: '',\n                        largestCardInDeck: '',\n                        emoji: '',\n                        placedBy: ''\n                    })\n                }\n            })\n        }\n    }\n\n    // Handles when local player exit the game lobby\n    // If last person to exit, delete the lobby\n    const exitClickedHandler = () => {\n        Object.entries(playerObjDict).forEach(([k, v]) => {\n            if(v.name === localPlayerName){\n                // Remove the player from the players list\n                roomReadRef.child(`${lobbyCode}/players/${k}`).remove()\n            }\n        })\n\n        const playerListQuery = roomReadRef.child(`${lobbyCode}/players`)\n        playerListQuery.once('value', snap => {\n            if(!snap.exists()) roomReadRef.child(lobbyCode).remove()\n        })\n        history.push(process.env.REACT_APP_LOBBYPAGE_URL)\n    }\n\n    if(loading){\n        return (\n            <div className={styles.loadingContainer}>\n                <h1 className={styles.h1}>Loading...</h1>\n            </div>\n        )\n    }else{\n        return( \n            lobbyExist ?\n            <div className={styles.Container}>\n                {!startGame &&\n                    <div className={styles.playerReadyContainer}>\n                        {prevWinner !== '' && <p className={styles.submitInfoText}>CONGRATUALTIONS, WINNER IS {prevWinner}!!!ヽ(•‿•)ノ</p>}\n                        <div className={styles.rowContainer}>\n                            {Object.values(playerObjDict).map(player =>  <img key={player.name} src={player.ready ? circleFilled : circle} className={styles.readyCircle} alt='ready button'/> )}\n                        </div>\n                        <button className={styles.playButton} onClick={playerReadyHandler}>{`${prevWinner === '' ? 'Ready?' : 'Go again?'}`}</button> \n                        <p className={styles.words}>{typeof(Object.values(playerObjDict).find(obj => obj.ready === false)) === 'undefined' && Object.keys(playerObjDict).length === 1 \n                        ? 'Hmmmm, the game needs more than 1 player to start ¯\\\\_( ͡❛ ͜ʖ ͡❛)_/¯' : \"only click if you're actually ready, of course ☉_☉\" }</p>\n                    </div>\n                }\n                <div className={styles.userCorner}>\n                    <button className={styles.cornerButton} onClick={() => exitClickedHandler()}>\n                        <IoExitOutline className={styles.cornerIcon}/>\n                        <p className={styles.tooltip}>Exit</p>\n                    </button>\n                    <p className={styles.p}>CODE: {lobbyCode}</p>\n                    <button onClick={() => setInfoTrigger(true)} className={styles.cornerButton}>\n                        <IoIosInformationCircle className={styles.cornerIcon}/>\n                        <p className={styles.tooltip}>Info</p>\n                    </button>\n                </div>\n\n                <Popup onCloseButtonClicked={() => setInfoTrigger(!infoTrigger)} trigger={infoTrigger}>\n                    <div className={styles.userInfoContainer}>\n                        <h1 className={styles.userh1}>User Guide</h1>\n                        <img src={userInfoPage === 1 ? userInfo : userInfo2} className={styles.userInfoImg} alt='info'/>\n                        {userInfoPage === 1 && <button onClick={() => setUserInfoPage(2)} className={styles.pageButton}><BiRightArrowAlt className={styles.cornerIcon}/></button>}\n                        {userInfoPage === 2 && <button onClick={() => setUserInfoPage(1)} className={styles.pageButton}><BiLeftArrowAlt className={styles.cornerIcon}/></button>}\n                    </div>\n                </Popup>\n\n                {Object.values(playerObjDict).map((playerObj, index) => { \n                    // Make sure local player gets 1 as assigned number, and everyone else starts from 2\n                    const assignedNumber = playerObj['name'] === localPlayerName ? 1 : currentPlayerNo++\n                    playerNameNumberDict[playerObj['name']] = assignedNumber\n                    \n                    return(<Player turn={playerObj['name'] === playerTurn} key={assignedNumber} onSubmit={onPlayerSubmitHandler} onSkip={onPlayerSkipHandler}\n                    playerData={playerObj} playerIndex={index} lobbyCode={lobbyCode} playerNo={assignedNumber}>{playerObj['name']}</Player>)\n                })}\n                {startGame && <Deck playerTurnNumber={playerNameNumberDict[playerTurn]} lobbyCode={lobbyCode}/>}\n                {submitError !== '' && \n                <div className={styles.submitInfoContainer}>\n                    <h1 className={styles.submitInfoText}>{submitError}</h1>\n                </div>}\n            </div> \n            : <ErrorPage>404 Lobby not found</ErrorPage>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/leftBackground.66308860.png\";","export default __webpack_public_path__ + \"static/media/rightBackground.f3f3e34f.png\";","import { useState } from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {db} from '../services/Firebase'\nimport styles from './LobbyPage.module.css'\nimport leftBackground from '../assets/leftBackground.png'\nimport rightBackground from '../assets/rightBackground.png'\n\nexport default function LobbyPage(){\n    const history = useHistory()\n    var [lobbyCode, setLobbyCode] = useState('')\n    const [playerName, setPlayerName] = useState('')\n    const [playClicked, setPlayClicked] = useState(false)\n    const [errorMsg, setErrorMsg] = useState('')\n\n    const roomReadRef = db.ref().child(`Lobbies`)\n\n    // Check if player name field is filled, if not, show an alert and return false\n    const playerNameCheck = () => {\n        if(playerName.length === 0){\n            setErrorMsg('Please enter a name')\n            return false\n        }\n        const specialChar = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?\\s]+/\n        if(specialChar.test(playerName)){\n            setErrorMsg('No special characters or spaces allowed for Player Name')\n            return false\n        }\n\n        return true\n    }\n\n    // Handles when use click Enter to enter a lobby\n    const lobbyEnterHandler = (e) => {\n        e.preventDefault()\n\n        if(!playerNameCheck())\n            return\n\n        if(lobbyCode === ''){\n            setErrorMsg('Please enter a lobby code')\n            return\n        }\n\n        const query = roomReadRef.orderByKey().equalTo(lobbyCode)\n        query.once('value', snap => {\n            if(snap.exists()){\n                if(snap.val()[lobbyCode]['started'] === true){\n                    setErrorMsg('Game already started')\n                    return\n                }\n\n                let playerList = snap.val()[lobbyCode]['players']\n\n                if(playerList.length >= 4){\n                    setErrorMsg(\"Lobby full\")\n                    return\n                }\n\n                const playerReadRef = roomReadRef.child(`${lobbyCode}`).child('players')\n                playerReadRef.push({\n                    name: playerName,\n                    ready: false,\n                    host: false\n                }).then(history.push({\n                    pathname: process.env.REACT_APP_GAMEPAGE_URL,\n                    search: `?code=${lobbyCode}&name=${playerName}`\n                }))\n            }\n            else\n                setErrorMsg(\"Lobby doesn't exist\")\n        })\n        setLobbyCode('')\n    }\n\n    // Random Code Generator: Generate 4 letter combination, each letter is random from 0-9, A-Z.\n    const randomAlphaNumericGenerator = () => {\n        // Generate a number from 0 - 35 \n        // If number is 0 - 9, convert directly to char\n        // if number is 10-35, add 55 to get ASCII code of Alphabet letter\n        var randomNo = Math.floor(Math.random() * 36)\n        \n        if(randomNo < 10) return randomNo.toString()\n        else return String.fromCharCode(55 + randomNo)\n    }\n\n    // Handles when the user click \"Create\" button to create a new room\n    const lobbyCreateHandler = (e) => {\n        e.preventDefault()\n\n        if(!playerNameCheck())\n            return\n        \n        // Generate 4 letter code\n        lobbyCode = randomAlphaNumericGenerator() + randomAlphaNumericGenerator() + randomAlphaNumericGenerator() + randomAlphaNumericGenerator()\n\n        // Check if the generated code already exist, if so, generate again\n        const query = roomReadRef.orderByKey().equalTo(lobbyCode)\n        query.once('value', snap => {\n            if(snap.exists()){\n                lobbyCode = randomAlphaNumericGenerator() + randomAlphaNumericGenerator() + randomAlphaNumericGenerator() + randomAlphaNumericGenerator()\n            }\n        })\n\n        const roomWriteRef = db.ref().child(`Lobbies/${lobbyCode}`)\n        // Create the lobby\n        roomWriteRef.set({\n            id: lobbyCode,\n            started: false,\n            gameEnded: false,\n            playerTurn: playerName,\n            prevWinner: ''\n        })\n\n        // Create an empty deck\n        roomWriteRef.child('deck').set({\n            cards: '',\n            deckType: '',\n            largestCardInDeck: '',\n            emoji: '',\n            placedBy: ''\n        })\n\n        // Add local player\n        roomWriteRef.child('players').push({\n            name: playerName,\n            ready: false,\n            host: true\n        })\n\n        // // MOCK PLAYERS\n        // roomWriteRef.child('players').push({\n        //     name: 'player2',\n        //     ready: true,\n        //     host: false,\n        // })\n        // roomWriteRef.child('players').push({\n        //     name: 'player3',\n        //     ready: true,\n        //     host: false,\n        // })\n\n        // Redirect to Game Page\n        history.push({\n            pathname: process.env.REACT_APP_GAMEPAGE_URL,\n            search: `?code=${lobbyCode}&name=${playerName}`\n        })\n    }\n\n    return(\n        <div className={styles.Container}>\n            {playClicked ? \n            <div className={styles.inputContainer}>\n                <p className={styles.p}>Lobby Code</p>\n                <form onSubmit={lobbyEnterHandler}>\n                    <div className={styles.rowContainer}>\n                        <input className={styles.inputField} value={lobbyCode} onChange={(e) => setLobbyCode(e.target.value.toUpperCase())} type=\"text\"/>\n                        <button className={styles.button} type=\"submit\">Enter</button>\n                        <p className={styles.p}>&ensp;Or&ensp;</p> <br/>\n                        <button className={styles.button} onClick={lobbyCreateHandler}>Create A Room</button>\n                    </div>\n                </form>\n                <p className={styles.p}>Player Name</p>\n                <input className={styles.inputField} value={playerName} onChange={(e) => setPlayerName(e.target.value)} type=\"text\"/> \n\n                {errorMsg !== '' && <h1 className={styles.errorMsg}>{errorMsg}</h1>}\n            </div>\n            : <button className={styles.playButton} onClick={() => setPlayClicked(true)}>Play</button>}\n         \n            <div className={styles.leftBackgroundContainer}>\n                <img src={leftBackground} alt='leftBackground' className={playClicked ? styles.leftBackgroundClicked : styles.leftBackground}/>\n            </div>\n            \n            <div className={styles.rightBackgroundContainer}>\n                <img src={rightBackground} alt='rightBackground' className={playClicked ? styles.rightBackgroundClicked : styles.rightBackground}/>\n            </div>\n\n        </div>\n    )\n}","import styles from './App.module.css';\nimport GamePage from './components/GamePage';\nimport LobbyPage from './components/LobbyPage'\nimport {Switch, Route, HashRouter} from 'react-router-dom'\nimport ErrorPage from './components/ErrorPage';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className={styles.Container}>\n      <HashRouter>\n        <Switch>\n          <Route path='/' exact component={LobbyPage} />\n          <Route path={process.env.REACT_APP_LOBBYPAGE_URL} exact component={LobbyPage} />\n          <Route path={process.env.REACT_APP_GAMEPAGE_URL} exact component={GamePage}/>\n          <Route path=\"*\" component={() => <ErrorPage>404 Page not found</ErrorPage>}/>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}